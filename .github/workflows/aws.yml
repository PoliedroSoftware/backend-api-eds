name: Build, Test, Deploy to ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # Usamos un runner de Ubuntu

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 4: Build the project
      - name: Build the project
        run: dotnet build --configuration Release

      # Step 5: Run unit tests
      - name: Run unit tests
        run: dotnet test --configuration Release --no-build

      # Step 6: Set AWS region
      - name: Set AWS region
        run: |
          aws configure set region us-east-2  # Reemplaza con tu regi√≥n de AWS
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      # Step 7: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 8: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t 713881784063.dkr.ecr.us-east-2.amazonaws.com/poliedro/api-eds:latest .

      # Step 9: Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag 713881784063.dkr.ecr.us-east-2.amazonaws.com/poliedro/api-eds:latest 713881784063.dkr.ecr.us-east-2.amazonaws.com/poliedro/api-eds:latest

      # Step 10: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push 713881784063.dkr.ecr.us-east-2.amazonaws.com/poliedro/api-eds:latest

      # Step 11: Register ECS Task Definition
      - name: Register ECS Task Definition
        run: |
          ecs_task_definition=$(aws ecs register-task-definition \
            --family my-task-family \
            --container-definitions "[ 
              {
                \"name\": \"my-container\",
                \"image\": \"713881784063.dkr.ecr.us-east-2.amazonaws.com/poliedro/api-eds:latest\",
                \"memory\": 512,
                \"cpu\": 256,
                \"essential\": true,
                \"portMappings\": [
                  {
                    \"containerPort\": 80,
                    \"hostPort\": 80
                  }
                ]
              }
            ]")
          echo $ecs_task_definition

      # Step 12: Deploy to Amazon ECS
      - name: Deploy to Amazon ECS
        run: |
          ecs_deploy=$(aws ecs update-service \
            --cluster poliedro-cluster-serverless \
            --service poliedro-task-backend-api-eds-service-dev \
            --task-definition $(echo $ecs_task_definition | jq -r .taskDefinition.taskDefinitionArn))
          echo $ecs_deploy
